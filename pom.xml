<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.yougou</groupId>
  <artifactId>mcs</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>msc</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.spring>4.3.8.RELEASE</version.spring>
    <feign.version>8.16.0</feign.version>
    <java.version>1.7</java.version>
  </properties>

  <dependencies>
  	<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${version.spring}</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${version.spring}</version>
        <scope>test</scope>
    </dependency>
    <!--feign http client-->
	<dependency>
        <groupId>com.netflix.feign</groupId>
        <artifactId>feign-core</artifactId>
        <version>${feign.version}</version>
    </dependency>
    <dependency>
        <groupId>com.netflix.feign</groupId>
        <artifactId>feign-jaxb</artifactId>
        <version>${feign.version}</version>
    </dependency>
    <dependency>
        <groupId>com.netflix.feign</groupId>
        <artifactId>feign-slf4j</artifactId>
        <version>${feign.version}</version>
    </dependency>
    <dependency>
        <groupId>com.netflix.feign</groupId>
        <artifactId>feign-jackson</artifactId>
        <version>${feign.version}</version>
    </dependency>
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>3.4</version>
	</dependency>
	<!--gson-->
	<dependency>
	    <groupId>com.google.code.gson</groupId>
	    <artifactId>gson</artifactId>
	    <version>2.8.0</version>
	</dependency>
	<!--Date And Time-->
	<dependency>
	    <groupId>joda-time</groupId>
	    <artifactId>joda-time</artifactId>
	    <version>2.9.9</version>
	</dependency>
	<!-- excel解析类 -->
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi</artifactId>
		<version>3.13</version>
	</dependency>
	<dependency>
	    <groupId>org.apache.poi</groupId>
	    <artifactId>poi-ooxml</artifactId>
	    <version>3.13</version>
	</dependency>
	<!-- 
	logback当前分成三个模块：logback-core,logback- classic和logback-access。
	logback-core是其它两个模块的基础模块。
	logback-classic是log4j的一个 改良版本。此外logback-classic完整实现SLF4J API使你可以很方便地更换成其它日志系统如log4j或JDK14 Logging。
	logback-access访问模块与Servlet容器集成提供通过Http来访问日志的功能。
	-->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>1.7.25</version>
	</dependency>
	<dependency>
	    <groupId>ch.qos.logback</groupId>
	    <artifactId>logback-classic</artifactId>
	    <version>1.2.3</version>
	</dependency>
	<dependency>
    <groupId>ch.qos.logback</groupId>
	    <artifactId>logback-core</artifactId>
	    <version>1.2.3</version>
	</dependency>
	
	<dependency>
	    <groupId>org.im4java</groupId>
	    <artifactId>im4java</artifactId>
	    <version>1.4.0</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/com.drewnoakes/metadata-extractor -->
	<dependency>
	    <groupId>com.drewnoakes</groupId>
	    <artifactId>metadata-extractor</artifactId>
	    <version>2.10.1</version>
	</dependency>
	
	<dependency>
	    <groupId>com.codahale.metrics</groupId>
	    <artifactId>metrics-core</artifactId>
	    <version>3.0.1</version>
	</dependency>
	
	<dependency>                                    
		<groupId>com.codahale.metrics</groupId>       
		<artifactId>metrics-healthchecks</artifactId> 
		<version>3.0.1</version>         
	</dependency>
	
	<dependency>
	    <groupId>com.ryantenney.metrics</groupId>
	    <artifactId>metrics-spring</artifactId>
	    <version>3.0.1</version>
	</dependency>
	
	<dependency>
	    <groupId>com.novaquark</groupId>
	    <artifactId>metrics-influxdb</artifactId>
	    <version>0.3.0</version>
	</dependency>
  </dependencies>

  <build>  
    <finalName>mcs</finalName> 
    <plugins> 
    	<!-- 设置源文件编码方式 -->  
        <plugin>  
            <groupId>org.apache.maven.plugins</groupId>  
            <artifactId>maven-compiler-plugin</artifactId>  
            <configuration>  
                <defaultLibBundleDir>lib</defaultLibBundleDir>  
                <source>1.7</source>  
                <target>1.7</target>  
                <encoding>UTF-8</encoding>  
            </configuration>  
        </plugin>
        <!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->     
        <plugin>  
            <groupId>org.apache.maven.plugins</groupId>  
            <artifactId>maven-jar-plugin</artifactId>  
            <version>2.4</version>  
            <configuration>  
				<source>1.7</source>
				<target>1.7</target>
				<encoding>UTF8</encoding>
                <archive>  
                    <manifest>  
                        <addClasspath>true</addClasspath>  
                        <classpathPrefix>lib/</classpathPrefix>  
                        <mainClass>com.yougou.mcs.App</mainClass>  
                    </manifest>
                    <manifestEntries>
                        <Class-Path>./</Class-Path>
                    </manifestEntries>  
                </archive>  
            </configuration>  
        </plugin>
        <!-- 拷贝依赖的jar包到lib目录 -->   
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>copy</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>
                            ${project.build.directory}/lib
                        </outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin> 
        <!-- 解决资源文件的编码问题 -->  
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>  
            <artifactId>maven-resources-plugin</artifactId>  
            <version>2.4</version>  
            <configuration>  
                <encoding>UTF-8</encoding>  
            </configuration>  
        </plugin>  
    </plugins>  
  </build>  
</project>
